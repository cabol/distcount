searchNodes=[{"doc":"Distcount keeps the contexts that define your domain and business logic. Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"Distcount.html","title":"Distcount","type":"module"},{"doc":"The Counters context.","ref":"Distcount.Counters.html","title":"Distcount.Counters","type":"module"},{"doc":"Creates a counter. Examples iex&gt; create_counter_log ( %{ field : value } ) { :ok , % Distcount.Counters.CounterLog { } } iex&gt; create_counter_log ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Distcount.Counters.html#create_counter_log/1","title":"Distcount.Counters.create_counter_log/1","type":"function"},{"doc":"Gets the counter's value given by key . Examples iex&gt; get_counter_value ( &quot;counter&quot; ) 0 iex&gt; get_counter_value ( &quot;unknown&quot; ) nil","ref":"Distcount.Counters.html#get_counter_value/1","title":"Distcount.Counters.get_counter_value/1","type":"function"},{"doc":"Increments/decrements the counter . Example iex&gt; incr ( % Distcount.Counters.CounterLog { key : &quot;foo&quot; , value : 1 } ) :ok","ref":"Distcount.Counters.html#incr/1","title":"Distcount.Counters.incr/1","type":"function"},{"doc":"Type for write operations response","ref":"Distcount.Counters.html#t:wr_response/0","title":"Distcount.Counters.wr_response/0","type":"type"},{"doc":"CounterLog schema.","ref":"Distcount.Counters.CounterLog.html","title":"Distcount.Counters.CounterLog","type":"module"},{"doc":"Counter's type","ref":"Distcount.Counters.CounterLog.html#t:t/0","title":"Distcount.Counters.CounterLog.t/0","type":"type"},{"doc":"Time bucket aggregator for counters. The main idea of this module is to aggregate counter logs by time slot, where the time slot is the offloading interval (interval for offloading the counter logs to the database to sync state). Since the counters are kept in memory (via an ETS table), the idea is to offload to the database only the counters that have been updated during the last offloading interval. Otherwise, we will end up having a full copy of the counters in memory and maybe offloading to the database some counters that haven't been even updated. This will be very inefficient and will affect the offloading performance significantly as well as it will increase the memory consumption very much (depending on the number of counters). Usage You can provide your own configuration via config file like so: config :distcount , Distcount.Counters.TimeBucketAggregator , offload_interval : 5000 Check the available options in the start_link/1 function. Telemetry This module exposes following Telemetry events: [:counters, :aggregator, :start] - Dispatched when the process starts. Measurement: %{system_time: integer} Metadata: %{name: atom} [:counters, :aggregator, :stop] - Dispatched when the process stops. Measurement: %{system_time: integer} Metadata: %{name: atom, reason: term} [:counters, :aggregator, :incr, :start] - Dispatched before the incr/3 function is executed. Measurement: %{system_time: integer} Metadata: %{counter: binary, amount: integer} [:counters, :aggregator, :incr, :stop] - Dispatched after the incr/3 function is executed. Measurement: %{duration: integer} Metadata: %{counter: binary, amount: integer} [:counters, :aggregator, :incr, :exception] - This event should be invoked when an error or exception occurs while executing the incr/3 function. Measurement: %{duration: integer} Metadata: %{ counter : binary , amount : integer , kind : :error | :exit | :throw , reason : term , stacktrace : term } [:counters, :aggregator, :offload, :start] - Dispatched before the offloading process is executed. Measurement: %{system_time: integer} Metadata: %{state: state} [:counters, :aggregator, :offload, :stop] - Dispatched after the offloading process is executed. Measurement: %{duration: integer} Metadata: %{state: state} [:counters, :aggregator, :offload, :exception] - This event should be invoked when an error or exception occurs while executing the offloading. Measurement: %{duration: integer} Metadata: %{ state : state , kind : :error | :exit | :throw , reason : term , stacktrace : term } [:counters, :aggregator, :offloaded_logs] - Dispatched after inserting the counter logs (offloading process). Measurement: %{system_time: integer} Metadata: %{inserted: integer, state: state}","ref":"Distcount.Counters.TimeBucketAggregator.html","title":"Distcount.Counters.TimeBucketAggregator","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Distcount.Counters.TimeBucketAggregator.html#child_spec/1","title":"Distcount.Counters.TimeBucketAggregator.child_spec/1","type":"function"},{"doc":"Increments/decrements the counter by the given amount . Example Distcount.Counters.TimeBucketAggregator . incr ( :test , &quot;counter&quot; , 1 )","ref":"Distcount.Counters.TimeBucketAggregator.html#incr/3","title":"Distcount.Counters.TimeBucketAggregator.incr/3","type":"function"},{"doc":"Starts a new server for the time-bucket defined by the given options opts . Options :name - An atom defining the name of the server. Defaults __MODULE__ . :offload_interval - Offloading interval in milliseconds (Defaults to 10_000 - 10 sec). Example Distcount.Counters.TimeBucketAggregator . start_link ( name : :test )","ref":"Distcount.Counters.TimeBucketAggregator.html#start_link/1","title":"Distcount.Counters.TimeBucketAggregator.start_link/1","type":"function"},{"doc":"Type for internal state","ref":"Distcount.Counters.TimeBucketAggregator.html#t:state/0","title":"Distcount.Counters.TimeBucketAggregator.state/0","type":"type"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on. This can be used in your application as: use DistcountWeb , :controller use DistcountWeb , :view The definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases. Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"DistcountWeb.html","title":"DistcountWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"DistcountWeb.html#__using__/1","title":"DistcountWeb.__using__/1","type":"macro"},{"doc":"","ref":"DistcountWeb.html#channel/0","title":"DistcountWeb.channel/0","type":"function"},{"doc":"","ref":"DistcountWeb.html#controller/0","title":"DistcountWeb.controller/0","type":"function"},{"doc":"","ref":"DistcountWeb.html#router/0","title":"DistcountWeb.router/0","type":"function"},{"doc":"","ref":"DistcountWeb.html#view/0","title":"DistcountWeb.view/0","type":"function"},{"doc":"","ref":"DistcountWeb.ChangesetView.html","title":"DistcountWeb.ChangesetView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"DistcountWeb.ChangesetView.html#__resource__/0","title":"DistcountWeb.ChangesetView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"DistcountWeb.ChangesetView.html#render/2","title":"DistcountWeb.ChangesetView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"DistcountWeb.ChangesetView.html#template_not_found/2","title":"DistcountWeb.ChangesetView.template_not_found/2","type":"function"},{"doc":"Traverses and translates changeset errors. See Ecto.Changeset.traverse_errors/2 and DistcountWeb.ErrorHelpers.translate_error/1 for more details.","ref":"DistcountWeb.ChangesetView.html#translate_errors/1","title":"DistcountWeb.ChangesetView.translate_errors/1","type":"function"},{"doc":"","ref":"DistcountWeb.Endpoint.html","title":"DistcountWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3 .","ref":"DistcountWeb.Endpoint.html#broadcast/3","title":"DistcountWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3 .","ref":"DistcountWeb.Endpoint.html#broadcast!/3","title":"DistcountWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4 .","ref":"DistcountWeb.Endpoint.html#broadcast_from/4","title":"DistcountWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4 .","ref":"DistcountWeb.Endpoint.html#broadcast_from!/4","title":"DistcountWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2 .","ref":"DistcountWeb.Endpoint.html#call/2","title":"DistcountWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"DistcountWeb.Endpoint.html#child_spec/1","title":"DistcountWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for key Returns default if the key does not exist.","ref":"DistcountWeb.Endpoint.html#config/2","title":"DistcountWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"DistcountWeb.Endpoint.html#config_change/2","title":"DistcountWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"DistcountWeb.Endpoint.html#host/0","title":"DistcountWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1 .","ref":"DistcountWeb.Endpoint.html#init/1","title":"DistcountWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3 .","ref":"DistcountWeb.Endpoint.html#local_broadcast/3","title":"DistcountWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4 .","ref":"DistcountWeb.Endpoint.html#local_broadcast_from/4","title":"DistcountWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"DistcountWeb.Endpoint.html#path/1","title":"DistcountWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"DistcountWeb.Endpoint.html#script_name/0","title":"DistcountWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree. Options :log_access_url - if the access url should be logged once the endpoint starts All other options are merged into the endpoint configuration.","ref":"DistcountWeb.Endpoint.html#start_link/1","title":"DistcountWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static . Meant to be used for Subresource Integrity with CDNs.","ref":"DistcountWeb.Endpoint.html#static_integrity/1","title":"DistcountWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity .","ref":"DistcountWeb.Endpoint.html#static_lookup/1","title":"DistcountWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static .","ref":"DistcountWeb.Endpoint.html#static_path/1","title":"DistcountWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"DistcountWeb.Endpoint.html#static_url/0","title":"DistcountWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"DistcountWeb.Endpoint.html#struct_url/0","title":"DistcountWeb.Endpoint.struct_url/0","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.subscribe/2 .","ref":"DistcountWeb.Endpoint.html#subscribe/2","title":"DistcountWeb.Endpoint.subscribe/2","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.unsubscribe/1 .","ref":"DistcountWeb.Endpoint.html#unsubscribe/1","title":"DistcountWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such.","ref":"DistcountWeb.Endpoint.html#url/0","title":"DistcountWeb.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"DistcountWeb.ErrorHelpers.html","title":"DistcountWeb.ErrorHelpers","type":"module"},{"doc":"Translates an error message.","ref":"DistcountWeb.ErrorHelpers.html#translate_error/1","title":"DistcountWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"DistcountWeb.ErrorView.html","title":"DistcountWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"DistcountWeb.ErrorView.html#__resource__/0","title":"DistcountWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"DistcountWeb.ErrorView.html#render/2","title":"DistcountWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"DistcountWeb.ErrorView.html#template_not_found/2","title":"DistcountWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"Translates controller action results into valid Plug.Conn responses. See Phoenix.Controller.action_fallback/1 for more details.","ref":"DistcountWeb.FallbackController.html","title":"DistcountWeb.FallbackController","type":"module"},{"doc":"Module with named helpers generated from DistcountWeb.Router.","ref":"DistcountWeb.Router.Helpers.html","title":"DistcountWeb.Router.Helpers","type":"module"},{"doc":"","ref":"DistcountWeb.Router.Helpers.html#counter_log_path/2","title":"DistcountWeb.Router.Helpers.counter_log_path/2","type":"function"},{"doc":"","ref":"DistcountWeb.Router.Helpers.html#counter_log_path/3","title":"DistcountWeb.Router.Helpers.counter_log_path/3","type":"function"},{"doc":"","ref":"DistcountWeb.Router.Helpers.html#counter_log_url/2","title":"DistcountWeb.Router.Helpers.counter_log_url/2","type":"function"},{"doc":"","ref":"DistcountWeb.Router.Helpers.html#counter_log_url/3","title":"DistcountWeb.Router.Helpers.counter_log_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"DistcountWeb.Router.Helpers.html#path/2","title":"DistcountWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"DistcountWeb.Router.Helpers.html#static_integrity/2","title":"DistcountWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"DistcountWeb.Router.Helpers.html#static_path/2","title":"DistcountWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"DistcountWeb.Router.Helpers.html#static_url/2","title":"DistcountWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"DistcountWeb.Router.Helpers.html#url/1","title":"DistcountWeb.Router.Helpers.url/1","type":"function"},{"doc":"Telemetry metrics. Usage In your config file add: config :distcount , DistcountWeb.Telemetry , telemetry_metrics : [ reporter : Telemetry.Metrics.ConsoleReporter ] Where the option :telemetry_metrics will define the reporter and the options for it. NOTE: No reporter is configured by default. For example, if you want to use StatsD as reporter (e.g.: with Datadog): config :distcount , DistcountWeb.Telemetry , telemetry_metrics : [ reporter : TelemetryMetricsStatsd , formatter : :datadog , prefix : &quot;distcount&quot; , global_tags : [ otp_app : &quot;distcount&quot; , env : &quot;dev&quot; ] , host : &quot;127.0.0.1&quot; , port : 8125 , pool_size : 10 ] See TelemetryMetricsStatsd for more information about the supported options.","ref":"DistcountWeb.Telemetry.html","title":"DistcountWeb.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"DistcountWeb.Telemetry.html#child_spec/1","title":"DistcountWeb.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"DistcountWeb.Telemetry.html#start_link/1","title":"DistcountWeb.Telemetry.start_link/1","type":"function"}]